Last login: Sat Apr  6 17:17:40 on ttys001
kali:WeEat jackiekrone$ npm install -g firebase-tools
/usr/local/bin/firebase -> /usr/local/lib/node_modules/firebase-tools/lib/bin/firebase.js
+ firebase-tools@6.5.3
added 21 packages from 13 contributors, removed 2 packages and updated 31 packages in 16.357s
kali:WeEat jackiekrone$ firebase login
Already logged in as jackie.marie.krone@gmail.com
kali:WeEat jackiekrone$ firebase init

     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/jackiekrone/WeEat

? Which Firebase CLI features do you want to setup for this folder? Press Space to select features, then Enter to
 confirm your choices. Database: Deploy Firebase Realtime Database Rules, Firestore: Deploy rules and create inde
xes for Firestore, Functions: Configure and deploy Cloud Functions, Hosting: Configure and deploy Firebase Hostin
g sites, Storage: Deploy Cloud Storage security rules

=== Project Setup

First, let's associate this project directory with a Firebase project.
You can create multiple project aliases by running firebase use --add, 
but for now we'll just set up a default project.

? Select a default Firebase project for this directory: weeat-c73e4 (WeEat)
i  Using project weeat-c73e4 (WeEat)

=== Database Setup

Firebase Realtime Database Rules allow you to define how your data should be
structured and when your data can be read from and written to.

? What file should be used for Database Rules? database.rules.json
✔  Database Rules for weeat-c73e4 have been downloaded to database.rules.json.
Future modifications to database.rules.json will update Database Rules when you run
firebase deploy.

=== Firestore Setup

Firestore Security Rules allow you to define how and when to allow
requests. You can keep these rules in your project directory
and publish them with firebase deploy.

? What file should be used for Firestore Rules? firestore.rules

Firestore indexes allow you to perform complex queries while
maintaining performance that scales with the size of the result
set. You can keep index definitions in your project directory
and publish them with firebase deploy.

? What file should be used for Firestore indexes? firestore.indexes.json

=== Functions Setup

A functions directory will be created in your project with a Node.js
package pre-configured. Functions can be deployed with firebase deploy.

? What language would you like to use to write Cloud Functions? JavaScript
? Do you want to use ESLint to catch probable bugs and enforce style? Yes
✔  Wrote functions/package.json
✔  Wrote functions/.eslintrc.json
✔  Wrote functions/index.js
✔  Wrote functions/.gitignore
? Do you want to install dependencies with npm now? Yes

> grpc@1.19.0 install /Users/jackiekrone/WeEat/functions/node_modules/grpc
> node-pre-gyp install --fallback-to-build --library=static_library

node-pre-gyp WARN Using needle for node-pre-gyp https download 
[grpc] Success: "/Users/jackiekrone/WeEat/functions/node_modules/grpc/src/node/extension_binary/node-v57-darwin-x64-unknown/grpc_node.node" is installed via remote

> protobufjs@6.8.8 postinstall /Users/jackiekrone/WeEat/functions/node_modules/protobufjs
> node scripts/postinstall


> firebase-functions@2.2.1 postinstall /Users/jackiekrone/WeEat/functions/node_modules/firebase-functions
> node ./upgrade-warning


======== WARNING! ========

This upgrade of firebase-functions contains breaking changes if you are upgrading from a version below v1.0.0.

To see a complete list of these breaking changes, please go to:

https://firebase.google.com/docs/functions/beta-v1-diff

npm notice created a lockfile as package-lock.json. You should commit this file.
added 430 packages from 273 contributors and audited 1213 packages in 17.242s
found 0 vulnerabilities



   ╭───────────────────────────────────────────────────────────────╮
   │                                                               │
   │       New minor version of npm available! 6.5.0 → 6.9.0       │
   │   Changelog: https://github.com/npm/cli/releases/tag/v6.9.0   │
   │               Run npm install -g npm to update!               │
   │                                                               │
   ╰───────────────────────────────────────────────────────────────╯


=== Hosting Setup

Your public directory is the folder (relative to your project directory) that
will contain Hosting assets to be uploaded with firebase deploy. If you
have a build process for your assets, use your build's output directory.

? What do you want to use as your public directory? WeEat
? Configure as a single-page app (rewrite all urls to /index.html)? Yes
✔  Wrote WeEat/index.html

=== Storage Setup

Firebase Storage Security Rules allow you to define how and when to allow
uploads and downloads. You can keep these rules in your project directory
and publish them with firebase deploy.

? What file should be used for Storage Rules? storage.rules

i  Writing configuration info to firebase.json...
i  Writing project information to .firebaserc...
i  Writing gitignore file to .gitignore...

✔  Firebase initialization complete!
kali:WeEat jackiekrone$ firebase deploy

=== Deploying to 'weeat-c73e4'...

i  deploying database, storage, firestore, functions, hosting
Running command: npm --prefix "$RESOURCE_DIR" run lint

> functions@ lint /Users/jackiekrone/WeEat/functions
> eslint .

✔  functions: Finished running predeploy script.
i  database: checking rules syntax...
✔  database: rules syntax for database weeat-c73e4 is valid
i  storage: checking storage.rules for compilation errors...
✔  storage: rules file storage.rules compiled successfully
i  firestore: checking firestore.rules for compilation errors...
i  firestore: reading indexes from firestore.indexes.json...
✔  firestore: rules file firestore.rules compiled successfully
i  functions: ensuring necessary APIs are enabled...
✔  functions: all necessary APIs are enabled
i  storage: uploading rules storage.rules...
i  firestore: uploading rules firestore.rules...

Error: HTTP Error: 400, Project 'weeat-c73e4' is not a Cloud Firestore enabled project.
kali:WeEat jackiekrone$ firebase deploy

=== Deploying to 'weeat-c73e4'...

i  deploying database, storage, firestore, functions, hosting
Running command: npm --prefix "$RESOURCE_DIR" run lint

> functions@ lint /Users/jackiekrone/WeEat/functions
> eslint .

✔  functions: Finished running predeploy script.
i  database: checking rules syntax...
✔  database: rules syntax for database weeat-c73e4 is valid
i  storage: checking storage.rules for compilation errors...
✔  storage: rules file storage.rules compiled successfully
i  firestore: checking firestore.rules for compilation errors...
i  firestore: reading indexes from firestore.indexes.json...
✔  firestore: rules file firestore.rules compiled successfully
i  functions: ensuring necessary APIs are enabled...
✔  functions: all necessary APIs are enabled
i  storage: uploading rules storage.rules...
i  firestore: uploading rules firestore.rules...

Error: HTTP Error: 400, Project 'weeat-c73e4' is not a Cloud Firestore enabled project.
kali:WeEat jackiekrone$ ls
WeEat                  firebase.json          firestore.rules        storage.rules
database.rules.json    firestore.indexes.json functions              weeat_notes.txt
kali:WeEat jackiekrone$ rm firestore.rules 
kali:WeEat jackiekrone$ firebase deploy

=== Deploying to 'weeat-c73e4'...

i  deploying database, storage, firestore, functions, hosting
Running command: npm --prefix "$RESOURCE_DIR" run lint

> functions@ lint /Users/jackiekrone/WeEat/functions
> eslint .

✔  functions: Finished running predeploy script.
i  database: checking rules syntax...
✔  database: rules syntax for database weeat-c73e4 is valid
i  storage: checking storage.rules for compilation errors...
✔  storage: rules file storage.rules compiled successfully

Error: Error reading rules file firestore.rules
kali:WeEat jackiekrone$ vim firebase.json 
kali:WeEat jackiekrone$ firebase deploy

=== Deploying to 'weeat-c73e4'...

i  deploying database, storage, functions, hosting
Running command: npm --prefix "$RESOURCE_DIR" run lint

> functions@ lint /Users/jackiekrone/WeEat/functions
> eslint .

✔  functions: Finished running predeploy script.
i  database: checking rules syntax...
✔  database: rules syntax for database weeat-c73e4 is valid
i  storage: checking storage.rules for compilation errors...
✔  storage: rules file storage.rules compiled successfully
i  functions: ensuring necessary APIs are enabled...
✔  functions: all necessary APIs are enabled
i  storage: uploading rules storage.rules...
i  functions: preparing functions directory for uploading...
i  hosting[weeat-c73e4]: beginning deploy...
i  hosting[weeat-c73e4]: found 32 files in WeEat
✔  hosting[weeat-c73e4]: file upload complete
i  database: releasing rules...
✔  database: rules for database weeat-c73e4 released successfully
✔  storage: released rules storage.rules to firebase.storage/weeat-c73e4.appspot.com
i  hosting[weeat-c73e4]: finalizing version...
✔  hosting[weeat-c73e4]: version finalized
i  hosting[weeat-c73e4]: releasing new version...
✔  hosting[weeat-c73e4]: release complete

✔  Deploy complete!

Please note that it can take up to 30 seconds for your updated functions to propagate.
Project Console: https://console.firebase.google.com/project/weeat-c73e4/overview
Hosting URL: https://weeat-c73e4.firebaseapp.com
kali:WeEat jackiekrone$ 
